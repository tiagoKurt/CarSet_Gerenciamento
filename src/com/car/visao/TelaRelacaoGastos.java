package com.car.visao;

import com.car.Enumerations.CategoriaVeiculos;
import com.car.Enumerations.ClassificacaoGastos;
import com.car.Enumerations.TipoCombustivel;
import com.car.Enumerations.TipoDoVeiculo;
import com.car.Ferramentas.ConexaoBD;
import com.car.Ferramentas.JTableRenderer;
import com.car.Modelos.Gastos;
import com.car.persistencia.GastosDao;
import com.car.persistencia.IGastosDao;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.netbeans.lib.awtextra.AbsoluteLayout;

public class TelaRelacaoGastos extends javax.swing.JFrame {

    private Connection conexao = null;
    PreparedStatement st;
    String classGastos;
    float gastosGraficoCombustivel = 0;
    float gastosSeguro = 0;
    float gastosMecanico = 0;
    float gastosImposto = 0;
    float outrosGastos = 0;
    float gastosGerais = 0;

    public TelaRelacaoGastos() {
        initComponents();
        imprimirDadosNaGrid();

        try {
            conexao = ConexaoBD.getConexao();
        } catch (Exception ex) {
            Logger.getLogger(TelaModelos.class.getName()).log(Level.SEVERE, null, ex);
        }

        GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
        Rectangle bounds = env.getMaximumWindowBounds();
        setLocationRelativeTo(null);
        int largura = bounds.width;
        int altura = bounds.height;
        setSize(largura, altura);
        setLocation(0, 0);
        classGastos = ClassificacaoGastos.COMBUSTIVEL + "";
        carregarComboBox();

        criarGraficos();
        criarGraficoGERAL();
        jPanel1_Combustivel.setVisible(false);
        jPanel1_mecanico.setVisible(false);
        jPanel1_Seguro.setVisible(false);
        jPanel1_Imposto.setVisible(false);
        jPanel1_outrosGastos.setVisible(false);
        jPanel1_gastosGeral.setVisible(false);

        jLabel7_graficos.setVisible(false);
        jComboBox1_tipoDoGastoGraficos.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1_gastos = new javax.swing.JTable();
        jButton4_voltar = new javax.swing.JButton();
        jComboBox1_tipoDoGasto = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1_tipoDoGastoGraficos = new javax.swing.JComboBox<>();
        jLabel7_graficos = new javax.swing.JLabel();
        jComboBox1_itemRelacao = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel1_mecanico = new javax.swing.JPanel();
        jPanel1_Combustivel = new javax.swing.JPanel();
        jPanel1_Seguro = new javax.swing.JPanel();
        jPanel1_Imposto = new javax.swing.JPanel();
        jPanel1_outrosGastos = new javax.swing.JPanel();
        jPanel1_gastosGeral = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jTable1_gastos.setBackground(new java.awt.Color(153, 153, 153));
        jTable1_gastos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jTable1_gastos.setFont(new java.awt.Font("Bodoni MT", 3, 26)); // NOI18N
        jTable1_gastos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "DESCRIÇÃO", "", "LOGO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1_gastos.setRowHeight(60);
        jTable1_gastos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1_gastosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1_gastos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 1190, 250));

        jButton4_voltar.setBackground(new java.awt.Color(102, 102, 102));
        jButton4_voltar.setFont(new java.awt.Font("Bodoni MT", 3, 18)); // NOI18N
        jButton4_voltar.setForeground(new java.awt.Color(255, 0, 153));
        jButton4_voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/car/visao/icons/voltar.png"))); // NOI18N
        jButton4_voltar.setText("VOLTAR");
        jButton4_voltar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jButton4_voltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4_voltarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4_voltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 700, 140, 40));

        jComboBox1_tipoDoGasto.setFont(new java.awt.Font("Bodoni MT", 3, 26)); // NOI18N
        jComboBox1_tipoDoGasto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jComboBox1_tipoDoGasto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jComboBox1_tipoDoGasto, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 130, 280, 50));

        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4), "TIPO DO GASTO", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Bodoni MT", 3, 26), new java.awt.Color(255, 255, 255))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 90, 380, 120));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/car/visao/icons/pinkLogoMenorzinha.gif"))); // NOI18N
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, 180, -1));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Bodoni MT", 3, 36)); // NOI18N
        jLabel4.setText("GASTOS");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 160, 30));

        jComboBox1_tipoDoGastoGraficos.setFont(new java.awt.Font("Bodoni MT", 3, 26)); // NOI18N
        jComboBox1_tipoDoGastoGraficos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jComboBox1_tipoDoGastoGraficos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1_tipoDoGastoGraficos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1_tipoDoGastoGraficosActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1_tipoDoGastoGraficos, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 130, 280, 50));

        jLabel7_graficos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4), "TIPO DO GASTO", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Bodoni MT", 3, 26), new java.awt.Color(255, 255, 255))); // NOI18N
        getContentPane().add(jLabel7_graficos, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 90, 380, 120));

        jComboBox1_itemRelacao.setFont(new java.awt.Font("Bodoni MT", 3, 24)); // NOI18N
        jComboBox1_itemRelacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TABELAS", "GRÁFICOS" }));
        jComboBox1_itemRelacao.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jComboBox1_itemRelacao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1_itemRelacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1_itemRelacaoActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1_itemRelacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 220, 50));

        jLabel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4), "VER GASTOS EM", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Bodoni MT", 3, 26), new java.awt.Color(255, 255, 255))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 310, 120));

        jPanel1_mecanico.setBackground(new java.awt.Color(255, 51, 153));
        jPanel1_mecanico.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1_mecanico, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 680, 430));

        jPanel1_Combustivel.setBackground(new java.awt.Color(255, 51, 153));
        jPanel1_Combustivel.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1_Combustivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 680, 430));

        jPanel1_Seguro.setBackground(new java.awt.Color(255, 51, 153));
        jPanel1_Seguro.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1_Seguro, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 680, 430));

        jPanel1_Imposto.setBackground(new java.awt.Color(255, 51, 153));
        jPanel1_Imposto.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1_Imposto, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 680, 430));

        jPanel1_outrosGastos.setBackground(new java.awt.Color(255, 51, 153));
        jPanel1_outrosGastos.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1_outrosGastos, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 680, 430));

        jPanel1_gastosGeral.setBackground(new java.awt.Color(255, 51, 153));
        jPanel1_gastosGeral.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1_gastosGeral, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 680, 430));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/car/visao/icons/FundoTelas.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1_gastosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1_gastosMouseClicked

    }//GEN-LAST:event_jTable1_gastosMouseClicked

    private void jButton4_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4_voltarActionPerformed
        // TODO add your handling code here:
        TelaPrincipal principal = new TelaPrincipal();
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4_voltarActionPerformed

    private void jComboBox1_itemRelacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1_itemRelacaoActionPerformed
        if (jComboBox1_itemRelacao.getSelectedIndex() == 0) {
            jScrollPane1.setVisible(true);
            jComboBox1_tipoDoGasto.setSelectedIndex(0);
            jLabel2.setVisible(true);
            jComboBox1_tipoDoGasto.setVisible(true);
            jComboBox1_tipoDoGastoGraficos.setSelectedIndex(0);

            jPanel1_Combustivel.setVisible(false);
            jPanel1_mecanico.setVisible(false);
            jPanel1_Seguro.setVisible(false);
            jPanel1_Imposto.setVisible(false);
            jPanel1_outrosGastos.setVisible(false);
            jPanel1_gastosGeral.setVisible(false);

            jLabel7_graficos.setVisible(false);
            jComboBox1_tipoDoGastoGraficos.setVisible(false);
        } else if (jComboBox1_itemRelacao.getSelectedIndex() == 1) {
            try {
                jLabel7_graficos.setVisible(true);
                jComboBox1_tipoDoGastoGraficos.setVisible(true);

                jScrollPane1.setVisible(false);
                jComboBox1_tipoDoGasto.setSelectedIndex(0);
                jLabel2.setVisible(false);
                jComboBox1_tipoDoGasto.setVisible(false);

                jPanel1_Combustivel.setVisible(true);

            } catch (Exception ex) {
                Logger.getLogger(TelaRelacaoGastos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jComboBox1_itemRelacaoActionPerformed

    public void criarGraficos() {
        try {
            DefaultCategoryDataset barra = new DefaultCategoryDataset();
            IGastosDao objetoDao = new GastosDao();

            ArrayList<Gastos> listaDeGastos = objetoDao.listaDeGastos();

            for (int i = 0; i < listaDeGastos.size(); i++) {
                if (listaDeGastos.get(i).getIdentificadorGasto() == ClassificacaoGastos.COMBUSTIVEL) {

                    gastosGraficoCombustivel += listaDeGastos.get(i).getGastoTotal();
                    barra.setValue(gastosGraficoCombustivel, "COMBUSTIVEL", "");
                    System.out.println(listaDeGastos.get(i).getGastoTotal());
                }
            }
            JFreeChart grafico1 = ChartFactory.createBarChart3D("GASTOS COM COMBUSTIVEL", "DATA", "TOTAL GASTO", barra, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot plot1 = grafico1.getCategoryPlot();
            BarRenderer renderer1 = (BarRenderer) plot1.getRenderer();
            Color barColor1 = new Color(0, 0, 153);
            renderer1.setSeriesPaint(0, barColor1);
            ChartPanel painel = new ChartPanel(grafico1);

            jPanel1_Combustivel.add(painel);

            DefaultCategoryDataset barra2 = new DefaultCategoryDataset();

            ArrayList<Gastos> listaDeGastos2 = objetoDao.listaDeGastos();

            for (int i = 0; i < listaDeGastos2.size(); i++) {
                if (listaDeGastos2.get(i).getIdentificadorGasto() == ClassificacaoGastos.SEGURO) {

                    gastosSeguro += listaDeGastos2.get(i).getGastoTotal();
                    barra2.setValue(gastosSeguro, "SEGURO", "");
                }
            }
            JFreeChart grafico2 = ChartFactory.createBarChart3D("GASTOS COM SEGURO", "DATA", "TOTAL GASTO", barra2, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot plot2 = grafico2.getCategoryPlot();
            BarRenderer renderer2 = (BarRenderer) plot2.getRenderer();
            Color barColor2 = new Color(153, 153, 153);
            renderer2.setSeriesPaint(0, barColor2);

            ChartPanel painel2 = new ChartPanel(grafico2);
            jPanel1_Seguro.add(painel2);

            DefaultCategoryDataset barra3 = new DefaultCategoryDataset();
            ArrayList<Gastos> listaDeGastos3 = objetoDao.listaDeGastos();
            for (int i = 0; i < listaDeGastos3.size(); i++) {
                if (listaDeGastos3.get(i).getIdentificadorGasto() == ClassificacaoGastos.IMPOSTO) {

                    gastosImposto += listaDeGastos3.get(i).getGastoTotal();
                    barra3.setValue(gastosImposto, "IMPOSTO", "");
                }
            }
            JFreeChart grafico3 = ChartFactory.createBarChart3D("GASTOS COM IMPOSTO", "DATA", "TOTAL GASTO", barra3, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot plot3 = grafico3.getCategoryPlot();
            BarRenderer renderer3 = (BarRenderer) plot3.getRenderer();
            Color barColor3 = new Color(0, 0, 0);
            renderer3.setSeriesPaint(0, barColor3);

            ChartPanel painel3 = new ChartPanel(grafico3);
            jPanel1_Imposto.add(painel3);
            //
            DefaultCategoryDataset barra4 = new DefaultCategoryDataset();
            ArrayList<Gastos> listaDeGastos4 = objetoDao.listaDeGastos();

            for (int i = 0; i < listaDeGastos4.size(); i++) {
                if (listaDeGastos4.get(i).getIdentificadorGasto() == ClassificacaoGastos.OUTROS) {

                    outrosGastos += listaDeGastos4.get(i).getGastoTotal();
                    barra4.setValue(outrosGastos, "OUTROS GASTOS", "");
                }
            }
            JFreeChart grafico4 = ChartFactory.createBarChart3D("OUTROS GASTOS", "DATA", "TOTAL GASTO", barra4, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot plot4 = grafico4.getCategoryPlot();
            BarRenderer renderer4 = (BarRenderer) plot4.getRenderer();
            Color barColor4 = new Color(255, 255, 0);
            renderer4.setSeriesPaint(0, barColor4);

            ChartPanel painel4 = new ChartPanel(grafico4);
            jPanel1_outrosGastos.add(painel4);
            //

            DefaultCategoryDataset barraa = new DefaultCategoryDataset();
            ArrayList<Gastos> listaDeGastoss = objetoDao.listaDeGastos();

            for (int i = 0; i < listaDeGastoss.size(); i++) {
                if (listaDeGastoss.get(i).getIdentificadorGasto() == ClassificacaoGastos.MECANICO) {

                    gastosMecanico += listaDeGastoss.get(i).getGastoTotal();
                    barraa.setValue(gastosMecanico, "MECÂNICO", "");
                }
            }
            JFreeChart graficos = ChartFactory.createBarChart3D("GASTOS COM MECÂNICO", "DATA", "TOTAL GASTO", barraa, PlotOrientation.VERTICAL, true, true, false);
            CategoryPlot plot = graficos.getCategoryPlot();
            BarRenderer renderer = (BarRenderer) plot.getRenderer();
            Color barColor = new Color(0, 128, 0);
            renderer.setSeriesPaint(0, barColor);

            ChartPanel painell = new ChartPanel(graficos);
            jPanel1_mecanico.add(painell);

            //
        } catch (Exception e) {

        }
    }

    public void criarGraficoGERAL() {
        try {
            gastosGraficoCombustivel = 0;
            gastosMecanico = 0;
            gastosImposto = 0;
            outrosGastos = 0;
            gastosSeguro = 0;
            
            DefaultCategoryDataset barra5 = new DefaultCategoryDataset();
            IGastosDao objetoDao = new GastosDao();
            ArrayList<Gastos> listaDeGastos5 = objetoDao.listaDeGastos();

            for (int i = 0; i < listaDeGastos5.size(); i++) {
                if (listaDeGastos5.get(i).getIdentificadorGasto() == ClassificacaoGastos.COMBUSTIVEL) {

                    gastosGraficoCombustivel += listaDeGastos5.get(i).getGastoTotal();
                    barra5.setValue(gastosGraficoCombustivel, "COMBUSTIVEL", "");
                }
                if (listaDeGastos5.get(i).getIdentificadorGasto() == ClassificacaoGastos.MECANICO) {
                    gastosMecanico += listaDeGastos5.get(i).getGastoTotal();
                    barra5.setValue(gastosMecanico, "MECANICO", "");
                }
                if (listaDeGastos5.get(i).getIdentificadorGasto() == ClassificacaoGastos.IMPOSTO) {
                    gastosImposto += listaDeGastos5.get(i).getGastoTotal();
                    barra5.setValue(gastosImposto, "IMPOSTO", "");
                }
                if (listaDeGastos5.get(i).getIdentificadorGasto() == ClassificacaoGastos.OUTROS) {

                    outrosGastos += listaDeGastos5.get(i).getGastoTotal();
                    barra5.setValue(outrosGastos, "OUTROS", "");
                }
                if (listaDeGastos5.get(i).getIdentificadorGasto() == ClassificacaoGastos.SEGURO) {
                    gastosSeguro += listaDeGastos5.get(i).getGastoTotal();
                    barra5.setValue(gastosSeguro, "SEGURO", "");
                }

            }

            JFreeChart grafico = ChartFactory.createBarChart3D("SOMA DE TODOS OS GASTOS POR TIPO", "TIPOS DE GASTOS", "TOTAL GASTOS", barra5, PlotOrientation.VERTICAL, true, true, false);
            ChartPanel painel5 = new ChartPanel(grafico);
            jPanel1_gastosGeral.add(painel5);
        } catch (Exception ex) {
            Logger.getLogger(TelaRelacaoGastos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void jComboBox1_tipoDoGastoGraficosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1_tipoDoGastoGraficosActionPerformed
        if (jComboBox1_tipoDoGastoGraficos.getSelectedIndex() == 0) {
            jPanel1_mecanico.setVisible(false);
            jPanel1_Seguro.setVisible(false);
            jPanel1_Imposto.setVisible(false);

            jPanel1_Combustivel.setVisible(true);
        } else if (jComboBox1_tipoDoGastoGraficos.getSelectedIndex() == 1) {
            jPanel1_Combustivel.setVisible(false);
            jPanel1_Seguro.setVisible(false);
            jPanel1_Imposto.setVisible(false);

            jPanel1_mecanico.setVisible(true);
        } else if (jComboBox1_tipoDoGastoGraficos.getSelectedIndex() == 2) {
            jPanel1_Combustivel.setVisible(false);
            jPanel1_mecanico.setVisible(false);
            jPanel1_Imposto.setVisible(false);

            jPanel1_Seguro.setVisible(true);
        } else if (jComboBox1_tipoDoGastoGraficos.getSelectedIndex() == 3) {
            jPanel1_mecanico.setVisible(false);
            jPanel1_Seguro.setVisible(false);
            jPanel1_Combustivel.setVisible(false);

            jPanel1_Imposto.setVisible(true);
        } else if (jComboBox1_tipoDoGastoGraficos.getSelectedIndex() == 4) {
            jPanel1_mecanico.setVisible(false);
            jPanel1_Seguro.setVisible(false);
            jPanel1_Combustivel.setVisible(false);
            jPanel1_gastosGeral.setVisible(false);
            jPanel1_Imposto.setVisible(false);

            jPanel1_outrosGastos.setVisible(true);
        } else if (jComboBox1_tipoDoGastoGraficos.getSelectedIndex() == 5) {
            jPanel1_outrosGastos.setVisible(false);
            jPanel1_mecanico.setVisible(false);
            jPanel1_Seguro.setVisible(false);
            jPanel1_Combustivel.setVisible(false);
            jPanel1_Imposto.setVisible(false);

            jPanel1_gastosGeral.setVisible(true);
        }
    }//GEN-LAST:event_jComboBox1_tipoDoGastoGraficosActionPerformed

    private void imprimirDadosNaGrid() {

        try {

            DefaultTableModel model = (DefaultTableModel) jTable1_gastos.getModel();
            JTableRenderer JtableRenderer = new JTableRenderer();
            conexao = ConexaoBD.getConexao();
            Statement statement = conexao.createStatement();
            String query = "select gastos_combustivel.id as identificador, tipogasto as \"Tipo do gasto\", veiculos.placa as Veiculo, descgasto as \"Tipo de Combustivel\" ,\n"
                    + "                    qtdlcomb as \"Litros colocados\", valorlitrocomb as \"Preço do Litro\", kmplcarro as \"KM/s por litro\",\n"
                    + "                    dataabast as \"Data Abastecimento\" from gastos_combustivel inner join veiculos on gastos_combustivel.id_veiculo = veiculos.id";
            ResultSet resultSet = statement.executeQuery(query);

            DefaultTableModel tableModel = new DefaultTableModel();
            jTable1_gastos.setModel(tableModel);

            ResultSetMetaData metaData = resultSet.getMetaData();
            int columnCount = metaData.getColumnCount();

            for (int i = 1; i <= columnCount; i++) {
                tableModel.addColumn(metaData.getColumnName(i));
            }

            while (resultSet.next()) {
                Object[] row = new Object[columnCount];
                for (int i = 1; i <= columnCount; i++) {
                    row[i - 1] = resultSet.getObject(i);
                }
                tableModel.addRow(row);
            }
            jTable1_gastos.getColumnModel().getColumn(0).setWidth(0);
            jTable1_gastos.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1_gastos.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable1_gastos.getColumnModel().getColumn(2).setWidth(140);
            jTable1_gastos.getColumnModel().getColumn(2).setMinWidth(140);
            jTable1_gastos.getColumnModel().getColumn(2).setMaxWidth(140);
            jTable1_gastos.getColumnModel().getColumn(7).setWidth(175);
            jTable1_gastos.getColumnModel().getColumn(7).setMinWidth(175);
            jTable1_gastos.getColumnModel().getColumn(7).setMaxWidth(175);
            jTable1_gastos.getColumnModel().getColumn(4).setWidth(105);
            jTable1_gastos.getColumnModel().getColumn(4).setMinWidth(105);
            jTable1_gastos.getColumnModel().getColumn(4).setMaxWidth(105);
            jTable1_gastos.getColumnModel().getColumn(5).setWidth(100);
            jTable1_gastos.getColumnModel().getColumn(5).setMinWidth(100);
            jTable1_gastos.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable1_gastos.getColumnModel().getColumn(6).setWidth(100);
            jTable1_gastos.getColumnModel().getColumn(6).setMinWidth(100);
            jTable1_gastos.getColumnModel().getColumn(6).setMaxWidth(100);

            resultSet.close();
            statement.close();

            jComboBox1_tipoDoGasto.addItemListener(new ItemListener() {
                public void itemStateChanged(ItemEvent e) {
                    if (e.getStateChange() == ItemEvent.SELECTED) {
                        try {
                            if (jComboBox1_tipoDoGasto.getSelectedIndex() == 0) {
                                DefaultTableModel model = (DefaultTableModel) jTable1_gastos.getModel();
                                JTableRenderer JtableRenderer = new JTableRenderer();
                                conexao = ConexaoBD.getConexao();
                                Statement statement = conexao.createStatement();
                                String query = "select gastos_combustivel.id as identificador, tipogasto as \"Tipo do gasto\", veiculos.placa as Veiculo, descgasto as \"Tipo de Combustivel\" ,\n"
                                        + "                    qtdlcomb as \"Litros colocados\", valorlitrocomb as \"Preço do Litro\", kmplcarro as \"KM/s por litro\",\n"
                                        + "                    dataabast as \"Data Abastecimento\" from gastos_combustivel inner join veiculos on gastos_combustivel.id_veiculo = veiculos.id";
                                ResultSet resultSet = statement.executeQuery(query);

                                DefaultTableModel tableModel = new DefaultTableModel();
                                jTable1_gastos.setModel(tableModel);

                                ResultSetMetaData metaData = resultSet.getMetaData();
                                int columnCount = metaData.getColumnCount();

                                for (int i = 1; i <= columnCount; i++) {
                                    tableModel.addColumn(metaData.getColumnName(i));
                                }

                                while (resultSet.next()) {
                                    Object[] row = new Object[columnCount];
                                    for (int i = 1; i <= columnCount; i++) {
                                        row[i - 1] = resultSet.getObject(i);
                                    }
                                    tableModel.addRow(row);
                                }
                                jTable1_gastos.getColumnModel().getColumn(0).setWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMinWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMaxWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(2).setWidth(140);
                                jTable1_gastos.getColumnModel().getColumn(2).setMinWidth(140);
                                jTable1_gastos.getColumnModel().getColumn(2).setMaxWidth(140);
                                jTable1_gastos.getColumnModel().getColumn(7).setWidth(175);
                                jTable1_gastos.getColumnModel().getColumn(7).setMinWidth(175);
                                jTable1_gastos.getColumnModel().getColumn(7).setMaxWidth(175);
                                jTable1_gastos.getColumnModel().getColumn(4).setWidth(105);
                                jTable1_gastos.getColumnModel().getColumn(4).setMinWidth(105);
                                jTable1_gastos.getColumnModel().getColumn(4).setMaxWidth(105);
                                jTable1_gastos.getColumnModel().getColumn(5).setWidth(100);
                                jTable1_gastos.getColumnModel().getColumn(5).setMinWidth(100);
                                jTable1_gastos.getColumnModel().getColumn(5).setMaxWidth(100);
                                jTable1_gastos.getColumnModel().getColumn(6).setWidth(100);
                                jTable1_gastos.getColumnModel().getColumn(6).setMinWidth(100);
                                jTable1_gastos.getColumnModel().getColumn(6).setMaxWidth(100);
                                resultSet.close();
                                statement.close();
                            }
                            if (jComboBox1_tipoDoGasto.getSelectedIndex() == 1) {
                                DefaultTableModel model = (DefaultTableModel) jTable1_gastos.getModel();
                                JTableRenderer JtableRenderer = new JTableRenderer();
                                conexao = ConexaoBD.getConexao();
                                Statement statement = conexao.createStatement();
                                String query = "select gastos_mecanico.id as Identificador, gastos_mecanico.tipogasto as \"Tipo do Gasto\",\n"
                                        + "veiculos.placa as Veiculo, gastos_mecanico.descgasto as Descrição, descitemman as \"Item/Serviço\",\n"
                                        + "qtditemman as \"Qnt Item\", valoritemman as \"Valor do Item\", valormaoobra as \"Valor mão de obra\",\n"
                                        + "datamanutencao as \"Data do gasto\" from gastos_mecanico inner join veiculos on \n"
                                        + "gastos_mecanico.id_veiculo = veiculos.id";

                                ResultSet resultSet = statement.executeQuery(query);

                                DefaultTableModel tableModel = new DefaultTableModel();
                                jTable1_gastos.setModel(tableModel);

                                ResultSetMetaData metaData = resultSet.getMetaData();
                                int columnCount = metaData.getColumnCount();

                                for (int i = 1; i <= columnCount; i++) {
                                    tableModel.addColumn(metaData.getColumnName(i));
                                }

                                while (resultSet.next()) {
                                    Object[] row = new Object[columnCount];
                                    for (int i = 1; i <= columnCount; i++) {
                                        row[i - 1] = resultSet.getObject(i);
                                    }
                                    tableModel.addRow(row);
                                }
                                jTable1_gastos.getColumnModel().getColumn(0).setWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMinWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMaxWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(5).setWidth(90);
                                jTable1_gastos.getColumnModel().getColumn(5).setMinWidth(90);
                                jTable1_gastos.getColumnModel().getColumn(5).setMaxWidth(90);
                                jTable1_gastos.getColumnModel().getColumn(8).setWidth(175);
                                jTable1_gastos.getColumnModel().getColumn(8).setMinWidth(175);
                                jTable1_gastos.getColumnModel().getColumn(8).setMaxWidth(175);
                                jTable1_gastos.getColumnModel().getColumn(7).setWidth(100);
                                jTable1_gastos.getColumnModel().getColumn(7).setMinWidth(100);
                                jTable1_gastos.getColumnModel().getColumn(7).setMaxWidth(100);
                                jTable1_gastos.getColumnModel().getColumn(2).setWidth(140);
                                jTable1_gastos.getColumnModel().getColumn(2).setMinWidth(140);
                                jTable1_gastos.getColumnModel().getColumn(2).setMaxWidth(140);
                                resultSet.close();
                                statement.close();

                            } else if (jComboBox1_tipoDoGasto.getSelectedIndex() == 2) {

                                DefaultTableModel model = (DefaultTableModel) jTable1_gastos.getModel();
                                JTableRenderer JtableRenderer = new JTableRenderer();
                                conexao = ConexaoBD.getConexao();
                                Statement statement = conexao.createStatement();
                                String query = "select gastos_seguro.id as Identificador, gastos_seguro.tipogasto as \"Tipo do Gasto\",\n"
                                        + "veiculos.placa as Veículo,\n"
                                        + "descgasto as Descrição, valorfranquia as \"Valor da Franquia\", datapagamento as \"Data do Pagamento\"\n"
                                        + "from gastos_seguro inner join veiculos on gastos_seguro.id_veiculo = veiculos.id";
                                ResultSet resultSet = statement.executeQuery(query);

                                DefaultTableModel tableModel = new DefaultTableModel();
                                jTable1_gastos.setModel(tableModel);

                                ResultSetMetaData metaData = resultSet.getMetaData();
                                int columnCount = metaData.getColumnCount();

                                for (int i = 1; i <= columnCount; i++) {
                                    tableModel.addColumn(metaData.getColumnName(i));
                                }

                                while (resultSet.next()) {
                                    Object[] row = new Object[columnCount];
                                    for (int i = 1; i <= columnCount; i++) {
                                        row[i - 1] = resultSet.getObject(i);
                                    }
                                    tableModel.addRow(row);
                                }
                                jTable1_gastos.getColumnModel().getColumn(0).setWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMinWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMaxWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(1).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(1).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(1).setMaxWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setMaxWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(4).setWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(4).setMinWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(4).setMaxWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(5).setWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(5).setMinWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(5).setMaxWidth(165);
                                resultSet.close();
                                statement.close();

                            } else if (jComboBox1_tipoDoGasto.getSelectedIndex() == 4) {

                                DefaultTableModel model = (DefaultTableModel) jTable1_gastos.getModel();
                                JTableRenderer JtableRenderer = new JTableRenderer();
                                conexao = ConexaoBD.getConexao();
                                Statement statement = conexao.createStatement();
                                String query = "select gastos_avulsos.id as Identificador, veiculos.placa as Veículo, \n"
                                        + "gastos_avulsos.tipogasto as \"Tipo Do Gasto\",\n"
                                        + "gastos_avulsos.descgasto as \"Descrição do gasto\", valorgasto as \"Valor do Gasto\",\n"
                                        + "datarealizacao as \"Data do Pagamento\" from gastos_avulsos inner join veiculos on \n"
                                        + "gastos_avulsos.id_veiculo = veiculos.id";
                                ResultSet resultSet = statement.executeQuery(query);

                                DefaultTableModel tableModel = new DefaultTableModel();
                                jTable1_gastos.setModel(tableModel);

                                ResultSetMetaData metaData = resultSet.getMetaData();
                                int columnCount = metaData.getColumnCount();

                                for (int i = 1; i <= columnCount; i++) {
                                    tableModel.addColumn(metaData.getColumnName(i));
                                }

                                while (resultSet.next()) {
                                    Object[] row = new Object[columnCount];
                                    for (int i = 1; i <= columnCount; i++) {
                                        row[i - 1] = resultSet.getObject(i);
                                    }
                                    tableModel.addRow(row);
                                }
                                jTable1_gastos.getColumnModel().getColumn(0).setWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMinWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMaxWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(1).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(1).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(1).setMaxWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setMaxWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(4).setWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(4).setMinWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(4).setMaxWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(5).setWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(5).setMinWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(5).setMaxWidth(165);
                                resultSet.close();
                                statement.close();

                            } else if (jComboBox1_tipoDoGasto.getSelectedIndex() == 3) {

                                DefaultTableModel model = (DefaultTableModel) jTable1_gastos.getModel();
                                JTableRenderer JtableRenderer = new JTableRenderer();
                                conexao = ConexaoBD.getConexao();
                                Statement statement = conexao.createStatement();
                                String query = "select gastos_impostos.id as \"Numero pedido\", tipogasto as \"Tipo do gasto\",\n"
                                        + "veiculos.placa as \"Veículo\",\n"
                                        + "descgasto as \"Descrição do gasto\", tipocarro as \"Tipo Veículo\", valorpago as \"Valor Pago\",\n"
                                        + "datapagamento as \"Data do pagamento\"\n"
                                        + "from gastos_impostos inner join veiculos on gastos_impostos.id_veiculo = veiculos.id";
                                ResultSet resultSet = statement.executeQuery(query);

                                DefaultTableModel tableModel = new DefaultTableModel();
                                jTable1_gastos.setModel(tableModel);

                                ResultSetMetaData metaData = resultSet.getMetaData();
                                int columnCount = metaData.getColumnCount();

                                for (int i = 1; i <= columnCount; i++) {
                                    tableModel.addColumn(metaData.getColumnName(i));
                                }

                                while (resultSet.next()) {
                                    Object[] row = new Object[columnCount];
                                    for (int i = 1; i <= columnCount; i++) {
                                        row[i - 1] = resultSet.getObject(i);
                                    }
                                    tableModel.addRow(row);
                                }
                                jTable1_gastos.getColumnModel().getColumn(0).setWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMinWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMaxWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(1).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(1).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(1).setMaxWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setMaxWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(5).setWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(5).setMinWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(5).setMaxWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(6).setWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(6).setMinWidth(165);
                                jTable1_gastos.getColumnModel().getColumn(6).setMaxWidth(165);
                                resultSet.close();
                                statement.close();

                            } else if (jComboBox1_tipoDoGasto.getSelectedIndex() == 5) {

                                DefaultTableModel model = (DefaultTableModel) jTable1_gastos.getModel();
                                JTableRenderer JtableRenderer = new JTableRenderer();
                                conexao = ConexaoBD.getConexao();
                                Statement statement = conexao.createStatement();
                                String query = "select gastosgeral.id as Identificador, gastosgeral.tipogasto as \"Tipo do Gasto\", \n"
                                        + "veiculos.placa as Veiculo,\n"
                                        + "gastosgeral.descgasto as \"Descrição do gasto\", gastosgeral.valortotal as \"Valor do gasto\",\n"
                                        + "gastosgeral.datagasto as \"Data do gasto\" from gastosgeral inner join veiculos on \n"
                                        + "gastosgeral.id_veiculo = veiculos.id";
                                ResultSet resultSet = statement.executeQuery(query);

                                DefaultTableModel tableModel = new DefaultTableModel();
                                jTable1_gastos.setModel(tableModel);

                                ResultSetMetaData metaData = resultSet.getMetaData();
                                int columnCount = metaData.getColumnCount();

                                for (int i = 1; i <= columnCount; i++) {
                                    tableModel.addColumn(metaData.getColumnName(i));
                                }

                                while (resultSet.next()) {
                                    Object[] row = new Object[columnCount];
                                    for (int i = 1; i <= columnCount; i++) {
                                        row[i - 1] = resultSet.getObject(i);
                                    }
                                    tableModel.addRow(row);
                                }
                                jTable1_gastos.getColumnModel().getColumn(0).setWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMinWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(0).setMaxWidth(0);
                                jTable1_gastos.getColumnModel().getColumn(1).setWidth(225);
                                jTable1_gastos.getColumnModel().getColumn(1).setMinWidth(225);
                                jTable1_gastos.getColumnModel().getColumn(1).setMaxWidth(225);
                                jTable1_gastos.getColumnModel().getColumn(2).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(2).setMaxWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(4).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(4).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(4).setMaxWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(5).setWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(5).setMinWidth(150);
                                jTable1_gastos.getColumnModel().getColumn(5).setMaxWidth(150);

                                resultSet.close();
                                statement.close();

                            }
                        } catch (Exception ex) {
                            Logger.getLogger(TelaRelacaoGastos.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            });
        } catch (Exception e) {

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaRelacaoGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaRelacaoGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaRelacaoGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaRelacaoGastos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaRelacaoGastos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4_voltar;
    private javax.swing.JComboBox<String> jComboBox1_itemRelacao;
    private javax.swing.JComboBox<ClassificacaoGastos> jComboBox1_tipoDoGasto;
    private javax.swing.JComboBox<ClassificacaoGastos> jComboBox1_tipoDoGastoGraficos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7_graficos;
    private javax.swing.JPanel jPanel1_Combustivel;
    private javax.swing.JPanel jPanel1_Imposto;
    private javax.swing.JPanel jPanel1_Seguro;
    private javax.swing.JPanel jPanel1_gastosGeral;
    private javax.swing.JPanel jPanel1_mecanico;
    private javax.swing.JPanel jPanel1_outrosGastos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1_gastos;
    // End of variables declaration//GEN-END:variables

    private void carregarComboBox() {
        jComboBox1_tipoDoGasto.setModel(new DefaultComboBoxModel<>(ClassificacaoGastos.values()));
        jComboBox1_tipoDoGastoGraficos.setModel(new DefaultComboBoxModel<>(ClassificacaoGastos.values()));

    }
}
